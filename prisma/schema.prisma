generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
  Recipe Recipe[]
  ProductFridge ProductFridge[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  type        ProductType
  size        Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
  @@unique(name: "name_type_size", fields: [name, type, size])
  ProductFridge  ProductFridge[]
  RecipeProduct RecipeProduct[]
}

model Fridge {
  id          String   @id @default(uuid())
  location    Int
  capacity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("fridges")
  ProductStorage ProductFridge[]
}

model Recipe {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("recipes")
  @@unique(name: "userId_name", fields: [userId, name])
  RecipeProduct RecipeProduct[]
}

model RecipeProduct {
  id           String   @id @default(uuid())
  recipeId     String
  recipe       Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  productId    String
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade) // Cascading here is not really necessary since products will never be deleted from the database
  quantity     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("recipe_products")
  @@unique(name: "recipeId_productId", fields: [recipeId, productId])
}

model ProductFridge {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  fridgeId  String
  fridge    Fridge   @relation(fields: [fridgeId], references: [id], onDelete: Cascade)
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_fridges")
  @@unique(name: "productId_fridgeId_userId", fields: [productId, fridgeId, userId])
}

enum ProductType {
  FOOD
  DRINK
}
